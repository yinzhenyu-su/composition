"use strict";(self.webpackChunkzcomposition=self.webpackChunkzcomposition||[]).push([[226],{9953:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-15833ca9",path:"/composition/Async/useAsync/",title:"useAsync",lang:"en-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"代码演示",slug:"代码演示",children:[{level:3,title:"基础使用",slug:"基础使用",children:[]}]},{level:2,title:"OPTION",slug:"option",children:[]},{level:2,title:"API",slug:"api",children:[{level:3,title:"参数",slug:"参数",children:[]}]}],filePathRelative:"composition/Async/useAsync/README.md",git:{updatedTime:1636899745e3,contributors:[{name:"phpjavac",email:"1060854705@qq.com",commits:1}]}}},247:(n,s,a)=>{a.r(s),a.d(s,{default:()=>h});var t=a(6252),p=a(2262),o=a(3577),e=a(1790),c=a(9669),l=a.n(c);const r=(0,t.uE)('<h1 id="useasync" tabindex="-1"><a class="header-anchor" href="#useasync" aria-hidden="true">#</a> useAsync</h1><p>讲异步函数转换为同步</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>需要异步代码转同步时使用</p></div><h2 id="代码演示" tabindex="-1"><a class="header-anchor" href="#代码演示" aria-hidden="true">#</a> 代码演示</h2><h3 id="基础使用" tabindex="-1"><a class="header-anchor" href="#基础使用" aria-hidden="true">#</a> 基础使用</h3>',5),i=(0,t._)("br",null,null,-1),u={key:0},k={key:1},d={key:2},b=(0,t._)("br",null,null,-1),g=(0,t._)("div",null,"请求数据成功",-1),m=(0,t.uE)('<h2 id="option" tabindex="-1"><a class="header-anchor" href="#option" aria-hidden="true">#</a> OPTION</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useAsync <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@lib&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> axios<span class="token punctuation">,</span> <span class="token punctuation">{</span> AxiosResponse <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;axios&quot;</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">Hitokoto</span> <span class="token punctuation">{</span>\n  from<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n  hitokoto<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n  id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  uuid<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">getInfo</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;https://v1.hitokoto.cn&quot;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> error<span class="token punctuation">,</span> loading<span class="token punctuation">,</span> response <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useAsync</span><span class="token generic class-name"><span class="token operator">&lt;</span>AxiosResponse<span class="token operator">&lt;</span>Hitokoto<span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span>getInfo<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise状态改变&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span> error<span class="token punctuation">,</span> loading<span class="token punctuation">,</span> response <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>\n\n<span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>br<span class="token operator">/</span><span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">&quot;error&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> error <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">&quot;loading&quot;</span><span class="token operator">&gt;</span> 请求数据中<span class="token operator">...</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> loading <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>hitokoto <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">-</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>from <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>br<span class="token operator">/</span><span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>请求数据成功<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h2 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> API</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">getInfo</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;https://v1.hitokoto.cn&quot;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> error<span class="token punctuation">,</span> loading<span class="token punctuation">,</span> response <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useAsync</span><span class="token generic class-name"><span class="token operator">&lt;</span>AxiosResponse<span class="token operator">&lt;</span>Hitokoto<span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span>getInfo<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise状态改变&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>error</td><td>请求错误 对象</td><td>string</td><td>-</td></tr><tr><td>loading</td><td>请求状态</td><td>boolean</td><td>-</td></tr><tr><td>response</td><td>返回的实体</td><td>any</td><td>-</td></tr><tr><td>Hitokoto</td><td>返回的实体类型(TS)</td><td>泛型</td><td>any</td></tr></tbody></table>',6),h=(0,t.aZ)({setup(n){const{error:s,loading:a,response:c}=(0,e.r5)((async()=>await l().get("https://v1.hitokoto.cn")),(()=>{console.log("promise状态改变")}));return console.log({error:s,loading:a,response:c}),(n,e)=>((0,t.wg)(),(0,t.iD)(t.HY,null,[r,(0,t._)("div",null,[i,(0,p.SU)(s)?((0,t.wg)(),(0,t.iD)("div",u,(0,o.zw)((0,p.SU)(s)),1)):(0,p.SU)(a)?((0,t.wg)(),(0,t.iD)("div",k," 请求数据中... "+(0,o.zw)((0,p.SU)(a)),1)):((0,t.wg)(),(0,t.iD)("div",d,[(0,t._)("div",null,(0,o.zw)((0,p.SU)(c).data.hitokoto)+" - "+(0,o.zw)((0,p.SU)(c).data.from),1),b,g]))]),m],64))}})}}]);