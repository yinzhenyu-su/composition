"use strict";(self.webpackChunkzcomposition=self.webpackChunkzcomposition||[]).push([[220],{6277:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-dc6acc2e",path:"/composition/Element/useHover/",title:"useHover",lang:"en-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"基本用法,传入Dom元素",slug:"基本用法-传入dom元素",children:[{level:3,title:"代码演示",slug:"代码演示",children:[]}]},{level:2,title:"useHover OPTION",slug:"usehover-option",children:[]},{level:2,title:"参数",slug:"参数",children:[]}],filePathRelative:"composition/Element/useHover/README.md",git:{updatedTime:1632982699e3,contributors:[{name:"curryPaste",email:"2771885247@qq.com",commits:2}]}}},428:(n,s,a)=>{a.r(s),a.d(s,{default:()=>d});var t=a(6252),p=a(3577),e=a(2262),o=a(1790);const l=(0,t._)("h1",{id:"usehover",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#usehover","aria-hidden":"true"},"#"),(0,t.Uk)(" useHover")],-1),c=(0,t._)("p",null,"一个用于追踪 dom 元素是否有鼠标悬停的 Hook。",-1),u=(0,t._)("h2",{id:"基本用法-传入dom元素",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#基本用法-传入dom元素","aria-hidden":"true"},"#"),(0,t.Uk)(" 基本用法,传入Dom元素")],-1),r=(0,t.Uk)("isHovering:"),i={style:{color:"red"}},k=(0,t.uE)('<h3 id="代码演示" tabindex="-1"><a class="header-anchor" href="#代码演示" aria-hidden="true">#</a> 代码演示</h3><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>divRef<span class="token punctuation">&quot;</span></span>\n         <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span>pink</span><span class="token punctuation">&quot;</span></span></span>\n    <span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>isHovering:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> red</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span> {{ isHovering }} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>ts<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span>useHover<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;zcomposition&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> divRef <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> isHovering <span class="token operator">=</span> <span class="token function">useHover</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> divRef<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="usehover-option" tabindex="-1"><a class="header-anchor" href="#usehover-option" aria-hidden="true">#</a> useHover OPTION</h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>isHovering</td><td>判断鼠标元素是否处于 hover 元素</td><td>boolean</td></tr></tbody></table><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>target</td><td>DOM 节点或者 Ref 对象</td><td>(() =&gt; HTMLElement) HTMLElement React.RefObject</td><td>--</td></tr><tr><td>onEnter</td><td>监听进入 hover</td><td>()=&gt;void</td><td>--</td></tr><tr><td>onLeave</td><td>监听离开 hover</td><td>()=&gt;void</td><td>--</td></tr></tbody></table>',6),d=(0,t.aZ)({setup(n){const s=(0,e.iH)(),a=(0,o.XI)((()=>s.value));return(n,o)=>((0,t.wg)(),(0,t.iD)(t.HY,null,[l,c,u,(0,t._)("div",null,[(0,t._)("div",{ref:(n,a)=>{a.divRef=n,s.value=n},style:{width:"200px",height:"200px",background:"pink"}},null,512),r,(0,t._)("span",i,(0,p.zw)((0,e.SU)(a)),1)]),k],64))}})}}]);