"use strict";(self.webpackChunkzcomposition=self.webpackChunkzcomposition||[]).push([[636],{5538:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-5b937b64",path:"/composition/Effect/useKeyPress/",title:"监听键盘事件",lang:"en-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"代码演示",slug:"代码演示",children:[]},{level:2,title:"示例代码",slug:"示例代码",children:[]},{level:2,title:"Interface",slug:"interface",children:[]},{level:2,title:"Option",slug:"option",children:[]}],filePathRelative:"composition/Effect/useKeyPress/README.md",git:{updatedTime:1632830925e3,contributors:[{name:"curryPaste",email:"2771885247@qq.com",commits:1}]}}},1530:(n,s,a)=>{a.r(s),a.d(s,{default:()=>f});var t=a(6252),e=a(3577),p=a(2262),o=a(1790),l=a(2060);const c=(0,t._)("h1",{id:"监听键盘事件",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#监听键盘事件","aria-hidden":"true"},"#"),(0,t.Uk)(" 监听键盘事件")],-1),r=(0,t._)("p",null,"设置需要监听的键码，当按下对应键时，触发函数",-1),u={class:"custom-container tip"},i=(0,t._)("p",{class:"custom-container-title"},"TIP",-1),k=(0,t._)("p",null,"事件支持支持keyup、keydown、keypress事件",-1),d={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/KeyboardEvent/key",target:"_blank",rel:"noopener noreferrer"},b=(0,t.Uk)("KeyboardEvent"),y={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/KeyboardEvent/key/Key_Values",target:"_blank",rel:"noopener noreferrer"},m=(0,t.Uk)("特殊键"),g=(0,t._)("h2",{id:"代码演示",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#代码演示","aria-hidden":"true"},"#"),(0,t.Uk)(" 代码演示")],-1),h=(0,t._)("br",null,null,-1),v=(0,t._)("br",null,null,-1),K=(0,t.uE)('<h2 id="示例代码" tabindex="-1"><a class="header-anchor" href="#示例代码" aria-hidden="true">#</a> 示例代码</h2><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>这里是你按下的键盘——包含了白名单({{whiteKeys}})：{{keys.whiteKey}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>无白名单：{{keys.allKey}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>\n<span class="token operator">&lt;</span>script setup lang<span class="token operator">=</span><span class="token string">&quot;ts&quot;</span><span class="token operator">&gt;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useKeyPress <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;zcomposition&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> whiteKeys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;KeyQ&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;KeyW&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;KeyE&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;KeyR&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;KeyT&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> keys <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    whiteKey<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>\n    allKey<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token function">useKeyPress</span><span class="token punctuation">(</span>\n    whiteKeys<span class="token punctuation">,</span> \n    <span class="token punctuation">(</span>event<span class="token operator">:</span> KeyboardEvent<span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n        keys<span class="token punctuation">.</span>whiteKey <span class="token operator">=</span> event<span class="token punctuation">.</span>key<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">useKeyPress</span><span class="token punctuation">(</span>\n    <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">(</span>event<span class="token operator">:</span> KeyboardEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;无白名单&#39;</span><span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        keys<span class="token punctuation">.</span>allKey <span class="token operator">=</span> event<span class="token punctuation">.</span>key<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">)</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="interface" tabindex="-1"><a class="header-anchor" href="#interface" aria-hidden="true">#</a> Interface</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// 键码</span>\n<span class="token keyword">type</span> <span class="token class-name">KeyType</span> <span class="token operator">=</span> KeyboardEvent<span class="token punctuation">[</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">]</span> <span class="token operator">|</span> KeyboardEvent<span class="token punctuation">[</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token comment">// 触发类型</span>\n<span class="token keyword">type</span> <span class="token class-name">keyEvent</span> <span class="token operator">=</span> <span class="token string">&#39;keydown&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;keyup&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;keypress&#39;</span><span class="token punctuation">;</span>\n<span class="token comment">// 执行的函数类型</span>\n<span class="token keyword">type</span> <span class="token class-name">EventMethod</span> <span class="token operator">=</span> <span class="token punctuation">(</span>event<span class="token operator">?</span><span class="token operator">:</span> KeyboardEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n<span class="token comment">// option选项</span>\n<span class="token keyword">interface</span> <span class="token class-name">EventOption</span> <span class="token punctuation">{</span>\n    events<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>keyEvent<span class="token operator">&gt;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="option" tabindex="-1"><a class="header-anchor" href="#option" aria-hidden="true">#</a> Option</h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>keyCode</td><td>要监听的key/是否全部监听</td><td>KeyType / true</td><td>-</td></tr><tr><td>method</td><td>要执行的方法</td><td>EventMethod</td><td>-</td></tr><tr><td>option</td><td>配置项</td><td>EventOption</td><td>{event: [&#39;keydown&#39;]}</td></tr></tbody></table>',7),f=(0,t.aZ)({setup(n){const s=["KeyQ","KeyW","KeyE","KeyR","KeyT"],a=(0,p.qj)({whiteKey:"",allKey:""});return l.isClient&&((0,o.Kr)(s,(n=>{a.whiteKey=n.key})),(0,o.Kr)(!0,(n=>{console.log("无白名单",n),a.allKey=n.key}))),(n,o)=>{const l=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[c,r,(0,t._)("div",u,[i,k,(0,t._)("p",null,[(0,t._)("a",d,[b,(0,t.Wm)(l)])]),(0,t._)("p",null,[(0,t._)("a",y,[m,(0,t.Wm)(l)])])]),g,(0,t._)("div",null,[h,(0,t._)("span",null,"这里是你按下的键盘——包含了白名单("+(0,e.zw)(s)+")："+(0,e.zw)((0,p.SU)(a).whiteKey),1),v,(0,t._)("span",null,"无白名单："+(0,e.zw)((0,p.SU)(a).allKey),1)]),K],64)}}})},2060:(n,s,a)=>{a.d(s,{isClient:()=>t});const t="undefined"!=typeof window,{toString:e}=Object.prototype}}]);