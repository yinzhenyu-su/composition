"use strict";(self.webpackChunkzcomposition=self.webpackChunkzcomposition||[]).push([[918],{4008:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-28a2a6ee",path:"/composition/Element/useInViewport/",title:"useInViewport",lang:"en-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"代码演示",slug:"代码演示",children:[{level:3,title:"基础使用",slug:"基础使用",children:[]}]},{level:2,title:"useInViewport OPTION",slug:"useinviewport-option",children:[]},{level:2,title:"结果",slug:"结果",children:[]}],filePathRelative:"composition/Element/useInViewport/README.md",git:{updatedTime:1632982699e3,contributors:[{name:"curryPaste",email:"2771885247@qq.com",commits:2}]}}},8702:(n,s,a)=>{a.r(s),a.d(s,{default:()=>m});var t=a(6252),p=a(3577),e=a(2262),o=a(1790);const l=(0,t._)("h1",{id:"useinviewport",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#useinviewport","aria-hidden":"true"},"#"),(0,t.Uk)(" useInViewport")],-1),c=(0,t._)("p",null,"监听 DOM 元素是否出现在视图中",-1),u=(0,t._)("h2",{id:"代码演示",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#代码演示","aria-hidden":"true"},"#"),(0,t.Uk)(" 代码演示")],-1),i={class:"targetWrapper"},r={class:"finalResultW"},k=(0,t._)("span",null,"finalResult:",-1),b={class:"testBlock"},d=(0,t.uE)('<h3 id="基础使用" tabindex="-1"><a class="header-anchor" href="#基础使用" aria-hidden="true">#</a> 基础使用</h3><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>targetWrapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>targetDom<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>targetDomS<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>finalResultW<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>finalResult:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>testBlock<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>{{finalResult}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>ts<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">,</span>watch<span class="token punctuation">,</span>onMounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useInViewport <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;zcomposition&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> targetDom <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">changeFunc</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;进入&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;离开&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> finalResult <span class="token operator">=</span> <span class="token function">useInViewport</span><span class="token punctuation">(</span>targetDom<span class="token punctuation">,</span> changeFunc<span class="token punctuation">)</span>\n\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n<span class="token selector">.targetWrapper</span><span class="token punctuation">{</span>\n        <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n        <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>\n        <span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n<span class="token selector">.targetDomS</span><span class="token punctuation">{</span>\n        <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span> \n        <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>\n        <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #000<span class="token punctuation">;</span> \n        <span class="token property">background</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.finalResultW</span><span class="token punctuation">{</span>\n        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n        <span class="token property">bottom</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span>    \n<span class="token punctuation">}</span>\n<span class="token selector">.finalResultW span</span><span class="token punctuation">{</span>\n        <span class="token property">line-height</span><span class="token punctuation">:</span>60px<span class="token punctuation">;</span>\n        <span class="token property">font-size</span><span class="token punctuation">:</span>30px<span class="token punctuation">;</span>    \n<span class="token punctuation">}</span>\n<span class="token selector">.testBlock</span><span class="token punctuation">{</span>      \n        <span class="token property">height</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>\n        <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>\n        <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>\n        <span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br></div></div><h2 id="useinviewport-option" tabindex="-1"><a class="header-anchor" href="#useinviewport-option" aria-hidden="true">#</a> useInViewport OPTION</h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>target</td><td>目标对象</td><td><code>Ref&lt;HTMLElement | null&gt;</code></td><td>-</td></tr><tr><td>callback</td><td>目标函数进入或离开视图的回调函数</td><td><code>function(value)</code></td><td>——</td></tr></tbody></table><h2 id="结果" tabindex="-1"><a class="header-anchor" href="#结果" aria-hidden="true">#</a> 结果</h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>finalResult</td><td>返回值，是否出现在当前浏览器视窗</td><td>boolean</td><td>false</td></tr></tbody></table>',6),m=(0,t.aZ)({setup(n){const s=(0,e.iH)(null),a=(0,o.NM)(s,(n=>{n?console.log("进入"):console.log("离开")}));return(n,o)=>((0,t.wg)(),(0,t.iD)(t.HY,null,[l,c,u,(0,t._)("div",i,[(0,t._)("div",{ref:(n,a)=>{a.targetDom=n,s.value=n},class:"targetDomS"},null,512),(0,t._)("div",r,[k,(0,t._)("span",b,(0,p.zw)((0,e.SU)(a)),1)])]),d],64))}})}}]);